// Generated by data binding compiler. Do not edit!
package io.openim.android.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import io.openim.android.demo.R;
import io.openim.android.demo.vm.LoginVM;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutLoginBinding extends ViewDataBinding {
  @NonNull
  public final ImageView clear;

  @NonNull
  public final EditText edt1;

  @NonNull
  public final EditText edt2;

  @NonNull
  public final CheckBox eyes;

  @NonNull
  public final TextView forgotPasswordTv;

  @NonNull
  public final TextView registerTv;

  @Bindable
  protected LoginVM mLoginVM;

  protected LayoutLoginBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView clear, EditText edt1, EditText edt2, CheckBox eyes, TextView forgotPasswordTv,
      TextView registerTv) {
    super(_bindingComponent, _root, _localFieldCount);
    this.clear = clear;
    this.edt1 = edt1;
    this.edt2 = edt2;
    this.eyes = eyes;
    this.forgotPasswordTv = forgotPasswordTv;
    this.registerTv = registerTv;
  }

  public abstract void setLoginVM(@Nullable LoginVM loginVM);

  @Nullable
  public LoginVM getLoginVM() {
    return mLoginVM;
  }

  @NonNull
  public static LayoutLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_login, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutLoginBinding>inflateInternal(inflater, R.layout.layout_login, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_login, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutLoginBinding>inflateInternal(inflater, R.layout.layout_login, null, false, component);
  }

  public static LayoutLoginBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutLoginBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutLoginBinding)bind(component, view, R.layout.layout_login);
  }
}
